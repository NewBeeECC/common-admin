<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.system.mapper.RcRelationMapper">
  <resultMap id="BaseResultMap" type="com.common.system.entity.RcRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="permissionid" jdbcType="INTEGER" property="permissionid" />
    <result column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, permissionid, roleid, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rc_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rc_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.common.system.entity.RcRelation">
    insert into rc_relation (id, permissionid, roleid, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{permissionid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.common.system.entity.RcRelation">
    insert into rc_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="permissionid != null">
        permissionid,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="permissionid != null">
        #{permissionid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.system.entity.RcRelation">
    update rc_relation
    <set>
      <if test="permissionid != null">
        permissionid = #{permissionid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.system.entity.RcRelation">
    update rc_relation
    set permissionid = #{permissionid,jdbcType=INTEGER},
      roleid = #{roleid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getByRoleId" parameterType="integer" resultMap="BaseResultMap">
    SELECT * FROM  rc_relation WHERE roleid=#{roleId}
  </select>
  <delete id="deleteByRoleId" parameterType="integer">
    DELETE FROM rc_relation WHERE roleid=#{roleId}
  </delete>
  <delete id="deleteByPermissionId" parameterType="integer">
    DELETE FROM rc_relation WHERE permissionid=#{pId}
  </delete>
</mapper>